#!/bin/bash

# Example for $XDG_CONFIG_HOME/sxiv/exec/key-handler
# Called by sxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon, one path per line: all marked images, if in thumbnail
# mode and at least one image has been marked, otherwise the current image.
# sxiv(1) blocks until this script terminates. It then checks which images
# have been modified and reloads them.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# exec 2>/dev/null
KEY="$1";
readonly ROOT=~/.config/sxiv

# vars: $images = Reads images into mapfile array
read_images() {
	images=()
	local img
	while read -r img
	do images+=("$(realpath "$img")")
	done
}

# args:   filenames to get tags from
# stdout: newline seperated list of tags
print_tags() {
	tmsu tags -1 "$@" | grep -v ':$\|^$' | sort -u
}
# args:   tags to get values from
# stdout: newline seperated list of values
print_values() {
	tmsu values -1 "$@" | sort -u
}

# args: files to get tags from, or all existing tags if no arguments
# vars: $tags = space seperated list of tags selected via rofi
# exit: 1 if no tags selected; else 0
select_tags() {
	tags="$(print_tags "$@" | rofi -p "select tag" -multi-select -dmenu | tr '\n' ' ')"
	[ "$tags" ]
}

# args: files to get tags from, or all existing tags if no arguments
# vars: $tag = selected tag
# exit: 1 if no tag selected; else 0
# shellcheck disable=SC2120
select_tag() {
	tag="$(print_tags "$@" | rofi -p "select tag" -dmenu)"
	[ "$tag" ]
}

# args: tag to get values from
# vars: $value -> value selected
# exit: 1 if no value selected; else 0
select_value() {
	value="$(print_values "$@" | rofi -p "select value ${tag:+for $tag}" -dmenu)"
	[ "$value" ]
}


# args: $1 = tag to set value to
add_value() {
	local tag="$1"
	read_images
	(
		cd "$(dirname -- "${images[0]}")" || exit
		while select_value "$tag"
		do tmsu tag --tags="$tag=$value" "${images[@]}"
		done &
	)
}

tag_value() {
	read_images
	(
		cd "$(dirname -- "${images[0]}")" || exit
		# shellcheck disable=SC2119
		while select_tag && select_value "$tag"
		do tmsu tag --tags="$tag=$value" "${images[@]}"
		done &
	);
}

tag_add() {
	read_images
	(
		cd "$(dirname -- "${images[0]}")" || exit
		while select_tags
		do tmsu tag --tags="$tags" "${images[@]}"
		done &
	)
}

tag_rm() {
	read_images
	(
		cd "$(dirname -- "${images[0]}")" || exit
		local tags
		while select_tags --explicit "${images[@]}"
		do tmsu untag --tags="$tags" "${images[@]}"
		done &
	)
}

readonly YANKTAG="$ROOT"/yanktag

tag_yank() {
	local image
	read -r image
	printf "%s" "$(realpath "$image")" > "$YANKTAG"
}

tag_paste() {
	read_images
	(
		cd "$(dirname -- "${images[0]}")" || exit
		tmsu tag --from "$(cat "$YANKTAG")" "${images[@]}"
	)
}

readonly TAGFILE="$ROOT"/quicktags

# arg1: quick tag to set, must be a digit
set_quicktag() {
	local image
	read -r image
	(
		cd "$(dirname -- "$image")" || exit
		local tag
		# shellcheck disable=SC2119
		if select_tag
		then
			{
				grep -Fv "quicktag[$1]" "$TAGFILE" 2>/dev/null
				echo "quicktag[$1]='$tag'"
			} > "$TAGFILE.$$"
			mv "$TAGFILE.$$" "$TAGFILE"
		fi &
	)
}

# arg1: quick tag to use, must be a digit
use_quicktag() {
	read_images
		# shellcheck disable=SC1090
	source "$TAGFILE"
	(
		cd "$(dirname -- "${images[0]}")" || exit
		# shellcheck disable=SC2154
		tmsu tag --tags="${quicktag[$1]}" "${images[@]}"
	)
}

shell() {
	read -r image
	"$TERMINAL" -cd "$(realpath "$(dirname -- "$image")")"
}

readonly LASTKEY=~/.config/sxiv/lastkey
if [ "$KEY" = "C-x" ]
then read -r KEY < "$LASTKEY"
fi

case "$KEY" in
"a") add_value artist ;;
"c") add_value character ;;
"s") add_value series ;;

"y") tag_yank ;;
"p") tag_paste ;;
"v") tag_value ;;
"t") tag_add ;;
"T") tag_rm  ;;

"1") use_quicktag 1 ;; "exclam")      set_quicktag 1 ;;
"2") use_quicktag 2 ;; "at")          set_quicktag 2 ;;
"3") use_quicktag 3 ;; "numbersign")  set_quicktag 3 ;;
"4") use_quicktag 4 ;; "dollar")      set_quicktag 4 ;;
"5") use_quicktag 5 ;; "percent")     set_quicktag 5 ;;
"6") use_quicktag 6 ;; "asciicircum") set_quicktag 6 ;;
"7") use_quicktag 7 ;; "ampersand")   set_quicktag 7 ;;
"8") use_quicktag 8 ;; "asterisk")    set_quicktag 8 ;;
"9") use_quicktag 9 ;; "parenleft")   set_quicktag 9 ;;
"0") use_quicktag 0 ;; "parenright")  set_quicktag 0 ;;

"colon") shell ;;
 * )
	# echo no handler for "'$KEY'" >&2
	exit 0
	;;
esac

echo "$KEY" > "$LASTKEY"
