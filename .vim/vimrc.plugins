" Package Management
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})
function! UseAddon(name, author)
	call minpac#add(a:author . '/' . a:name, {'type':'opt'})
	execute "packadd! " . fnameescape(a:name)
endfunction
"{{{ Sessions
call UseAddon('vim-prosession', 'dhruvasagar')
call UseAddon('vim-obsession', 'tpope')
"}}}
"{{{ AutoClose (), {}, [], etc
call UseAddon("delimitMate", "Raimondi")
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1
"}}}
"{{{ Useful
call UseAddon("vim-surround", "tpope")
call UseAddon("vim-repeat", "tpope")
call UseAddon("vim-sexp", "guns")
call UseAddon("vim-sexp-mappings-for-regular-people", "tpope")
let g:sexp_filetypes = 'clojure,scheme,lisp,timl,c,cpp'
let g:sexp_enable_insert_mode_mappings=0
call UseAddon("vim-eunuch", "tpope")
call UseAddon("vim-unimpaired", "tpope")
"}}}
"{{{ Netrw
call UseAddon("vim-vinegar", "tpope")
nmap gu <Plug>VinegarUp
let g:netrw_http_cmd = "curl -so"
let g:netrw_liststyle = 4
let g:netrw_hide = 1
let g:netrw_list_hide = "\\~$"
let g:netrw_sizestyle = "h"
"}}}
"{{{ Buffer
call UseAddon("a.vim", "vim-scripts")
nnoremap <leader>b :ls<cr>:b<space>
nnoremap <leader>sb :ls<cr>:sb<space>
nnoremap gb :bnext<cr>
nnoremap gB :bprevious<cr>
call UseAddon("NrrwRgn", "chrisbra")
"}}}
"{{{ Syntax
call UseAddon("vim-plugin-AnsiEsc", "powerman")
"}}}
"{{{ Wiki
call UseAddon('vimwiki', 'vimwiki')
let g:vimwiki_list = [{
\ 'path': '~/prog/wiki',
\ 'path_html': '~/prog/wiki/site/',
\ 'template_path': '~/prog/wiki/template/'
\}]
"}}}
"{{{ Keywords
call UseAddon("vim-man", "vim-utils")
call UseAddon("vinfo", "alx741")
set keywordprg=:Man
"}}}
"{{{ Git
call UseAddon("vim-fugitive", "tpope")
augroup VIMRC_fugitive
	autocmd!
	autocmd BufReadPost fugitive://* set bufhidden=delete
augroup END
"}}}
"{{{ Ale
call UseAddon("ale", "w0rp")
let g:ale_lint_on_insert_leave = 1
let g:ale_lint_on_text_changed = "normal"
let g:ale_linters = {
	\ 'c': ['clangtidy', 'cppcheck'],
	\ 'cpp': ['clangtidy', 'cppcheck']
	\}
let g:ale_cpp_clangtidy_checks = [
	\'*', '-fuchsia-default-arguments',
	\'-cppcoreguidelines-pro-type-vararg', '-hicpp-vararg']
"}}}
" vim: foldmarker={{{,}}}: foldlevel=0: foldmethod=marker
